const axios = require("axios");

module.exports.config = {
    name: "xvideo",
    version: "1.3.0",
    hasPermssion: 0,
    credits: "qm",
    description: "T√¨m ki·∫øm video tr√™n XVideos",
    commandCategory: "NSFW",
    usages: "[t·ª´ kh√≥a]",
    cooldowns: 10,
    dependencies: {
        "axios": ""
    }
};

module.exports.run = async function({ api, event }) {
    return api.sendMessage({
        body: "üîç ùêìùê¢ÃÄùê¶ ùê§ùê¢ùêûÃÇÃÅùê¶ ùêØùê¢ùêùùêûùê® ùê≠ùê´ùêûÃÇùêß ùêóùêïùê¢ùêùùêûùê®ùê¨\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüëâ Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm:",
        mentions: []
    }, event.threadID, (err, info) => {
        global.client.handleReply.push({
            name: this.config.name,
            messageID: info.messageID,
            author: event.senderID,
            step: "getKeyword"
        });
    });
};

module.exports.handleReply = async function({ api, event, handleReply }) {
    if (event.senderID !== handleReply.author) return;

    if (handleReply.step === "getKeyword") {
        const keyword = encodeURIComponent(event.body.trim());
        if (!keyword) {
            return api.sendMessage("‚ö†Ô∏è Vui l√≤ng nh·∫≠p t·ª´ kh√≥a h·ª£p l·ªá!", event.threadID);
        }
        return searchAndSendVideos(api, event, keyword, 1);
    }

    if (handleReply.step === "changePage") {
        const newPage = parseInt(event.body.trim());
        
        // Ki·ªÉm tra h·ªßy t√¨m ki·∫øm tr∆∞·ªõc
        if (newPage === 0) {
            return api.sendMessage("‚ùå ƒê√£ h·ªßy t√¨m ki·∫øm video!", event.threadID, () => {
                api.unsendMessage(handleReply.messageID);
            });
        }
        
        // Sau ƒë√≥ ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa trang
        if (isNaN(newPage) || newPage < 1) {
            return api.sendMessage("‚ö†Ô∏è Vui l√≤ng nh·∫≠p s·ªë trang h·ª£p l·ªá (t·ª´ 1 tr·ªü l√™n)!", event.threadID);
        }
        
        if (newPage > handleReply.totalPages) {
            return api.sendMessage(`‚ö†Ô∏è Trang ${newPage} kh√¥ng t·ªìn t·∫°i. Ch·ªâ c√≥ ${handleReply.totalPages} trang k·∫øt qu·∫£.`, event.threadID);
        }
        
        // N·∫øu m·ªçi th·ª© h·ª£p l·ªá th√¨ th·ª±c hi·ªán t√¨m ki·∫øm
        return searchAndSendVideos(api, event, handleReply.keyword, newPage);
    }
};

async function searchAndSendVideos(api, event, keyword, page) {
    try {
        const apiUrl = `http://87.106.100.187:6312/prn/search/${keyword}`;
        const { data } = await axios.get(apiUrl);
        
        // Chuy·ªÉn ƒë·ªïi object th√†nh array v√† l·ªçc c√°c video h·ª£p l·ªá
        const videos = Object.values(data).filter(
            video => video.title && video.duration && video.video
        );

        if (!videos.length) {
            return api.sendMessage({
                body: `‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ n√†o cho t·ª´ kh√≥a "${decodeURIComponent(keyword)}"`,
                mentions: []
            }, event.threadID);
        }

        const itemsPerPage = 5;
        const totalPages = Math.ceil(videos.length / itemsPerPage);
        
        if (page > totalPages) {
            return api.sendMessage({
                body: `‚ö†Ô∏è Trang ${page} kh√¥ng t·ªìn t·∫°i. Ch·ªâ c√≥ ${totalPages} trang k·∫øt qu·∫£.`,
                mentions: []
            }, event.threadID);
        }

        const startIdx = (page - 1) * itemsPerPage;
        const results = videos.slice(startIdx, startIdx + itemsPerPage);

        let message = `üîé ùêäùêûÃÇÃÅùê≠ ùê™ùêÆùêöÃâ ùê≠ùê¢ÃÄùê¶ ùê§ùê¢ùêûÃÇÃÅùê¶: "${decodeURIComponent(keyword)}"\n`;
        message += `üìÑ ùêìùê´ùêöùêßùê† ${page}/${totalPages}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n`;
        
        results.forEach((video, index) => {
            const num = startIdx + index + 1;
            message += `‚ú® ${num}. ${video.title || 'Kh√¥ng c√≥ ti√™u ƒë·ªÅ'}\n`;
            message += `‚è±Ô∏è Th·ªùi l∆∞·ª£ng: ${video.duration || 'Kh√¥ng r√µ'}\n`;
            if (video.uploaderName) {
                message += `üë§ Uploader: ${video.uploaderName}\n`;
            }
            message += `üîó Link: ${video.video}\n\n`;
        });

        message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüìå Nh·∫≠p s·ªë trang (1-${totalPages}) ƒë·ªÉ xem th√™m ho·∫∑c "0" ƒë·ªÉ h·ªßy`;

        return api.sendMessage({
            body: message,
            mentions: []
        }, event.threadID, (err, info) => {
            if (err) return console.error(err);
            
            global.client.handleReply.push({
                name: module.exports.config.name,
                messageID: info.messageID,
                author: event.senderID,
                step: "changePage",
                keyword: keyword,
                totalPages: totalPages
            });
        });

    } catch (error) {
        console.error("L·ªói khi t√¨m ki·∫øm video:", error);
        return api.sendMessage({
            body: "‚ö†Ô∏è ƒê√£ x·∫£y ra l·ªói khi t√¨m ki·∫øm video. Vui l√≤ng th·ª≠ l·∫°i sau!",
            mentions: []
        }, event.threadID);
    }
}