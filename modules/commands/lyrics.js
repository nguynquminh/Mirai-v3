const axios = require("axios");

const API_KEY = "a7479b6170bcbd5d7997eb80845e7d98";

module.exports.config = {
    name: "lyrics",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "qm",
    description: "T√¨m l·ªùi b√†i h√°t t·ª´ Musixmatch",
    commandCategory: "Ti·ªán √≠ch",
    usages: "lyrics",
    cooldowns: 5
};

module.exports.run = async function({ api, event }) {
    return api.sendMessage("üéµ Reply tin nh·∫Øn n√†y ƒë·ªÉ nh·∫≠p t√™n b√†i h√°t:", event.threadID, (err, info) => {
        global.client.handleReply.push({
            step: "getQuery",
            name: this.config.name,
            messageID: info.messageID,
            author: event.senderID
        });
    });
};

module.exports.handleReply = async function({ api, event, handleReply }) {
    if (event.senderID !== handleReply.author) return;

    switch (handleReply.step) {
        case "getQuery": {
            const query = encodeURIComponent(event.body.trim());
            const res = await axios.get(`https://api.musixmatch.com/ws/1.1/track.search?q_track=${query}&apikey=${API_KEY}`);
            const tracks = res.data.message.body.track_list;

            if (!tracks.length) {
                return api.sendMessage("‚ùå Kh√¥ng t√¨m th·∫•y b√†i h√°t n√†o!", event.threadID);
            }

            const list = tracks.map((item, index) => `${index + 1}. ${item.track.track_name} - ${item.track.artist_name}`).join("\n");

            api.sendMessage(`üéß K·∫øt qu·∫£ t√¨m th·∫•y:\n${list}\n\nüì• Reply s·ªë th·ª© t·ª± ƒë·ªÉ xem l·ªùi b√†i h√°t.`, event.threadID, (err, info) => {
                global.client.handleReply.push({
                    step: "chooseTrack",
                    name: module.exports.config.name,
                    messageID: info.messageID,
                    author: event.senderID,
                    tracks
                });
            });
            break;
        }

        case "chooseTrack": {
            const index = parseInt(event.body) - 1;
            if (isNaN(index) || index < 0 || index >= handleReply.tracks.length) {
                return api.sendMessage("‚ö†Ô∏è S·ªë kh√¥ng h·ª£p l·ªá!", event.threadID);
            }

            const trackId = handleReply.tracks[index].track.track_id;
            const res = await axios.get(`https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${trackId}&apikey=${API_KEY}`);
            const lyrics = res.data.message.body.lyrics?.lyrics_body;

            if (!lyrics) {
                return api.sendMessage("‚ùå Kh√¥ng t√¨m th·∫•y l·ªùi b√†i h√°t!", event.threadID);
            }

            return api.sendMessage(`üéº L·ªùi b√†i h√°t:\n\n${lyrics}`, event.threadID);
        }
    }
};
