const taixiuGames = {};

module.exports.config = {
    name: "taixiu",
    version: "1.0.0",
    hasPermission: 0,
    credits: "qm",
    description: "Ch∆°i tr√≤ ch∆°i T√†i X·ªâu",
    commandCategory: "game",
    usages: "taixiu [create/join/start/list/end/pause]",
    cooldowns: 2,
};

module.exports.run = async function({
    api,
    event,
    args,
    Currencies,
    Users
}) {
    const {
        threadID,
        senderID,
        messageID
    } = event;
    const command = args[0];

    if (!command) {
        return api.sendMessage("üìú Danh s√°ch l·ªánh:\n- !taixiu create: T·∫°o b√†n T√†i X·ªâu\n- !taixiu join: Tham gia b√†n T√†i X·ªâu\n- !taixiu start: B·∫Øt ƒë·∫ßu tr√≤ ch∆°i\n- !taixiu list: Danh s√°ch ng∆∞·ªùi ch∆°i\n- !taixiu end: K·∫øt th√∫c tr√≤ ch∆°i\n- !taixiu pause: T·∫°m ho√£n tr√≤ ch∆°i", threadID, messageID);
        }
        
    if (command === "create") {
        if (taixiuGames[threadID]) {
            return api.sendMessage("ƒê√£ c√≥ b√†n T√†i X·ªâu ƒëang di·ªÖn ra!", threadID, messageID);
        }
        taixiuGames[threadID] = {
            players: {},
            started: false,
            paused: false
        };
        return api.sendMessage("B√†n T√†i X·ªâu ƒë√£ ƒë∆∞·ª£c t·∫°o! Ng∆∞·ªùi ch∆°i c√≥ th·ªÉ tham gia b·∫±ng c√°ch nh·∫≠p 'taixiu join'", threadID);
    }

    if (command === "join") {
        if (!taixiuGames[threadID]) {
            return api.sendMessage("Hi·ªán ch∆∞a c√≥ b√†n T√†i X·ªâu n√†o, h√£y t·∫°o m·ªôt b√†n b·∫±ng c√°ch nh·∫≠p 'taixiu create'", threadID, messageID);
        }
        if (taixiuGames[threadID].started) {
            return api.sendMessage("Tr√≤ ch∆°i ƒë√£ b·∫Øt ƒë·∫ßu, kh√¥ng th·ªÉ tham gia th√™m!", threadID, messageID);
        }
        api.sendMessage("H√£y nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n (T√†i ho·∫∑c X·ªâu) v√† s·ªë ti·ªÅn c∆∞·ª£c (VD: T√†i 1000)", threadID, (err, info) => {
            global.client.handleReply.push({
                type: "taixiu_join",
                name: module.exports.config.name,
                threadID: threadID,
                author: senderID,
                messageID: info.messageID
            });
        });
        return;
    }

    if (command === "pause") {
        if (!taixiuGames[threadID]) {
            return api.sendMessage("Kh√¥ng c√≥ b√†n T√†i X·ªâu n√†o ƒë·ªÉ t·∫°m ho√£n!", threadID, messageID);
        }
        taixiuGames[threadID].paused = !taixiuGames[threadID].paused;
        if (taixiuGames[threadID].paused) {
            api.sendMessage("B√†n T√†i X·ªâu ƒë√£ ƒë∆∞·ª£c t·∫°m ho√£n! B·∫°n c√≥ th·ªÉ thay ƒë·ªïi l·ª±a ch·ªçn v√† m·ª©c c∆∞·ª£c b·∫±ng c√°ch reply tin nh·∫Øn n√†y.", threadID, (err, info) => {
                global.client.handleReply.push({
                    type: "taixiu_change",
                    name: module.exports.config.name,
                    author: senderID,
                    messageID: info.messageID
                });
            });
        } else {
            api.sendMessage("B√†n T√†i X·ªâu ƒë√£ ti·∫øp t·ª•c!", threadID);
        }
        return;
    }

    if (command === "start") {
        if (!taixiuGames[threadID]) {
            return api.sendMessage("Hi·ªán ch∆∞a c√≥ b√†n T√†i X·ªâu n√†o, h√£y t·∫°o m·ªôt b√†n b·∫±ng c√°ch nh·∫≠p 'taixiu create'", threadID, messageID);
        }
        if (taixiuGames[threadID].paused) {
            return api.sendMessage("B√†n T√†i X·ªâu ƒëang t·∫°m ho√£n, vui l√≤ng ti·∫øp t·ª•c tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu!", threadID, messageID);
        }
        if (Object.keys(taixiuGames[threadID].players).length === 0) {
            return api.sendMessage("Kh√¥ng c√≥ ng∆∞·ªùi ch∆°i n√†o tham gia, tr√≤ ch∆°i b·ªã h·ªßy!", threadID, messageID);
        }
        taixiuGames[threadID].started = true;
        const dice1 = Math.floor(Math.random() * 6) + 1;
        const dice2 = Math.floor(Math.random() * 6) + 1;
        const dice3 = Math.floor(Math.random() * 6) + 1;
        const total = dice1 + dice2 + dice3;
        const result = total >= 11 ? "T√†i" : "X·ªâu";

        let resultMessage = `üé≤ K·∫øt qu·∫£: ${dice1} + ${dice2} + ${dice3} = ${total} ‚Üí ${result}!\n`;
        let winners = [];

        for (let player in taixiuGames[threadID].players) {
            let playerData = taixiuGames[threadID].players[player];
        
            if (playerData.choice.toLowerCase() === result.toLowerCase()) {
                winners.push(await Users.getNameUser(player));
                await Currencies.increaseMoney(player, playerData.bet * 2);
            } else {
                await Currencies.decreaseMoney(player, playerData.bet);
            }
        }
        

        if (winners.length > 0) {
            resultMessage += `üéâ Ng∆∞·ªùi th·∫Øng: ${winners.join(", " )}!\n`;
        } else {
            resultMessage += "üò¢ Kh√¥ng c√≥ ai th·∫Øng!";
        }

        return api.sendMessage(resultMessage, threadID);
    }

    if (command === "list") {
        if (!taixiuGames[threadID]) {
            return api.sendMessage("Hi·ªán ch∆∞a c√≥ b√†n T√†i X·ªâu n√†o.", threadID, messageID);
        }
        let playerList = "üìú Danh s√°ch ng∆∞·ªùi ch∆°i:\n";
        for (let player in taixiuGames[threadID].players) {
            const name = await Users.getNameUser(player);
            playerList += `- ${name}: ${taixiuGames[threadID].players[player].choice} - ${taixiuGames[threadID].players[player].bet}\n`;
        }
        return api.sendMessage(playerList, threadID);
    }

    if (command === "end") {
        if (!taixiuGames[threadID]) {
            return api.sendMessage("Kh√¥ng c√≥ b√†n T√†i X·ªâu n√†o ƒë·ªÉ k·∫øt th√∫c!", threadID, messageID);
        }
        delete taixiuGames[threadID];
        return api.sendMessage("B√†n T√†i X·ªâu ƒë√£ k·∫øt th√∫c!", threadID);
    }
};

module.exports.handleReply = async function({
    api,
    event,
    handleReply,
    Currencies
}) {
    const {
        threadID,
        senderID,
        body,
        messageID
    } = event;

    // X·ª≠ l√Ω khi ng∆∞·ªùi ch∆°i mu·ªën thay ƒë·ªïi l·ª±a ch·ªçn ho·∫∑c m·ª©c c∆∞·ª£c (pause)
    if (handleReply.type === "taixiu_change") {
        const [choice, bet] = body.trim().split(/\s+/);
        if (!["t√†i", "x·ªâu"].includes(choice.toLowerCase()) || isNaN(bet)) {
            return api.sendMessage("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p l·∫°i (VD: T√†i 1000).", threadID, messageID);
        }

        if (!taixiuGames[threadID] || !taixiuGames[threadID].players[senderID]) {
            return api.sendMessage("‚ö†Ô∏è B·∫°n ch∆∞a tham gia b√†n T√†i X·ªâu ho·∫∑c b√†n ƒë√£ k·∫øt th√∫c.", threadID, messageID);
        }

        taixiuGames[threadID].players[senderID] = {
            choice: choice.charAt(0).toUpperCase() + choice.slice(1).toLowerCase(),
            bet: parseInt(bet)
        };

        return api.sendMessage(`‚úÖ B·∫°n ƒë√£ thay ƒë·ªïi c∆∞·ª£c: ${bet} v√†o ${taixiuGames[threadID].players[senderID].choice}!`, threadID, messageID);
    }

    // X·ª≠ l√Ω khi ng∆∞·ªùi ch∆°i ƒë·∫∑t c∆∞·ª£c l·∫ßn ƒë·∫ßu ti√™n (sau khi d√πng !taixiu join)
    if (handleReply.type === "taixiu_join") {
        const [choice, bet] = body.trim().split(/\s+/);
        if (!["t√†i", "x·ªâu"].includes(choice.toLowerCase()) || isNaN(bet)) {
            return api.sendMessage("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p l·∫°i (VD: T√†i 1000).", threadID, messageID);
        }

        if (!taixiuGames[threadID]) {
            return api.sendMessage("‚ö†Ô∏è B√†n T√†i X·ªâu ƒë√£ b·ªã h·ªßy ho·∫∑c kh√¥ng t·ªìn t·∫°i!", threadID, messageID);
        }

        // Ki·ªÉm tra s·ªë d∆∞ c·ªßa ng∆∞·ªùi ch∆°i
        let userData = await Currencies.getData(senderID);
        if (userData.money < parseInt(bet)) {
            return api.sendMessage(`‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c ${bet}! Hi·ªán t·∫°i b·∫°n c√≥ ${userData.money}$.`, threadID, messageID);
        }

        // L∆∞u l·ª±a ch·ªçn v√†o danh s√°ch ng∆∞·ªùi ch∆°i
        taixiuGames[threadID].players[senderID] = {
            choice: choice.charAt(0).toUpperCase() + choice.slice(1).toLowerCase(), // Chuy·ªÉn th√†nh "T√†i" ho·∫∑c "X·ªâu"
            bet: parseInt(bet)
        };

        return api.sendMessage(`‚úÖ B·∫°n ƒë√£ ƒë·∫∑t c∆∞·ª£c ${bet} v√†o ${taixiuGames[threadID].players[senderID].choice}!`, threadID, messageID);
    }
};


